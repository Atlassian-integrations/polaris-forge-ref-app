modules:
  # 'platform:objectProvider':
  #   - key: slack-object-provider2
  #     function: slack-resolver
  #     domains: ["slack2.com"]
  #     authType: "oauth2"
  'polaris:objectProvider':
    # - key: slack-object-provider
    #   function: slack-resolver
    #   domains: ["slack.com"]
    #   subdomain: true
    #   linkPattern: >-
    #     ^https:\/\/.+?\.slack\.com\/archives\/[C|G][A-Z0-9][^/]+\/p[\d]+$
    #   authType: "oauth2"
    - key: oauth2-provider
      function: oauth2-resolver
      domains: ["atlassian.net"]
      subdomain: true
      authType: "oauth2"
    # - key: atlassian3-object-provider
    #   function: noauth-resolver
    #   domains: ["atlassian3.com"]
    #   authType: "oauth2"
    #   # authType: "api_key"
    #   authHint: "Please create new API key in https://id.atlassian.com/manage-profile/security/api-tokens"
  externalAuth:
    - key: oauth2
      scopes:
        - 'read:jira-work'
        - 'read:jira-user'
      displayName: Atlassian - Jira
      providerType: oauth2
      authorizationUrl: 'https://auth.atlassian.com/authorize?audience=api.atlassian.com'
      exchangeUrl: 'https://auth.atlassian.com/oauth/token'
      revokeTokenUrl: 'https://auth.atlassian.com/oauth/token'
      # additionalConsentParameters: 
      #   cloudId: 
      #     var: 'cloudId'
      additionalParameters:  
        prompt: 'consent' 
      profileRetriever:
        type: url
        value: 'https://api.atlassian.com/me'
        resolvers:
          id: 'account_id'
          displayName: 'email'
        authorization:
          location: header
          headerName: Authorization
          tokenPrefix: 'Bearer '
  function:
    - key: oauth2-resolver
      handler: index.runOAuth2
      externalAuth: oauth2
permissions:
  scopes: []
app:
  id: ari:cloud:ecosystem::app/e9d89f54-860c-4006-96b2-50333bba579b
  name: Polaris Forge ref app
